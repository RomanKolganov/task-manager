{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJwtToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagment/Register.js","components/UserManagment/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","identifier","props","deleteProject","this","className","name","description","to","onClick","bind","Component","connect","window","confirm","delete","CreateProjectButton","Fragment","Dashboard","getProjects","projects","map","key","id","state","get","setJwtToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","startDate","endDate","errors","onChange","onSubmit","nextProps","setState","e","target","value","preventDefault","newProject","classnames","placeholder","initialState","project_tasks","project_task","isActionPayload","combineReducers","action","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updatedProject","disabled","ProjectTask","backlog_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","projectIdentifier","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","project_sequence","getProjectTask","updatedTask","updateProjectTask","put","Landing","protoTypes","PropTypes","object","isRequired","Register","username","password","confirmPassword","newUser","createNewUser","Login","loginRequest","login","res","setItem","decoded","jwt_decode","component","otherProps","render","App","jwtToken","decodedToken","currentTime","Date","now","exp","exact","path","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1d9e731f.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/project\", project);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const getProjects = () => async dispatch => {\n  const response = await axios.get(\"/api/project\");\n  dispatch({\n    type: GET_PROJECTS,\n    payload: response.data\n  });\n};\n\nexport const getProject = (identifier, history) => async dispatch => {\n  try {\n    const response = await axios.get(`/api/project/${identifier}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: response.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteProject = identifier => async dispatch => {\n  if (\n    window.confirm(\n      \"Are you shure? This will delete the project and all the data relatedto to it\"\n    )\n  ) {\n    await axios.delete(`/api/project/${identifier}`);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: identifier\n    });\n  }\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectActions\";\n\nclass ProjectItem extends Component {\n  onDeleteClick = identifier => {\n    this.props.deleteProject(identifier);\n  };\n\n  render() {\n    const { project } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <span className=\"mx-auto\">{project.identifier}</span>\n            </div>\n            <div className=\"col-lg-6 col-md-4 col-8\">\n              <h3>{project.name}</h3>\n              <p>{project.description}</p>\n            </div>\n            <div className=\"col-md-4 d-lg-block\">\n              <ul className=\"list-group\">\n                <Link to={`/projectBoard/${project.identifier}`}>\n                  <li className=\"list-group-item board\">\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\n                  </li>\n                </Link>\n                <Link to={`/updateProject/${project.identifier}`}>\n                  <li className=\"list-group-item update\">\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                  </li>\n                </Link>\n                <li\n                  className=\"list-group-item delete\"\n                  onClick={this.onDeleteClick.bind(this, project.identifier)}\n                >\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired\n};\n\nexport default connect(null, { deleteProject })(ProjectItem);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateProjectButton = () => {\n  return (\n    <React.Fragment>\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n        Create a Project\n      </Link>\n    </React.Fragment>\n  );\n};\n\nexport default CreateProjectButton;\n","import React, { Component } from \"react\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    const { projects } = this.props.project;\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">Projects</h1>\n              <br />\n              <CreateProjectButton />\n              <br />\n              <hr />\n              {projects.map(project => (\n                <ProjectItem key={project.id} project={project} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project\n});\n\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\n","import axios from \"axios\";\n\nconst setJwtToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJwtToken;\n","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJwtToken from \"../securityUtils/setJwtToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/user/register\", newUser);\n    history.push(\"/login\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const login = loginRequest => async dispatch => {\n  try {\n    const res = await axios.post(\"api/user/login\", loginRequest);\n    const { token } = res.data;\n    localStorage.setItem(\"jwtToken\", token);\n    setJwtToken(token);\n    const decoded = jwt_decode(token);\n\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const logout = () => async dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setJwtToken(false);\n\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {}\n  });\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityActions\";\n\nclass Header extends Component {\n  logout() {\n    this.props.logout();\n    window.location.href = \"/\";\n  }\n\n  render() {\n    const { validToken, user } = this.props.security;\n\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              Dashboard\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link to=\"/dashboard\" className=\"nav-link \">\n              <i className=\"fas fa-user-circle mr-1\">{user.fullName}</i>\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              to=\"/logout\"\n              onClick={this.logout.bind(this)}\n            >\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsNotAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link to=\"/register\" className=\"nav-link \">\n              Sign Up\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            Personal Project Management Tool\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {headerLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps, { logout })(Header);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      name: \"\",\n      identifier: \"\",\n      description: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newProject = {\n      name: this.state.name,\n      identifier: this.state.identifier,\n      description: this.state.description,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate\n    };\n\n    this.props.createProject(newProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Create Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.name\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"name\"\n                    value={this.state.name}\n                    onChange={this.onChange}\n                  />\n                  {errors.name && (\n                    <div className=\"invalid-feedback\">{errors.name}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.identifier\n                    })}\n                    placeholder=\"Unique Project ID\"\n                    name=\"identifier\"\n                    value={this.state.identifier}\n                    onChange={this.onChange}\n                  />\n                  {errors.identifier && (\n                    <div className=\"invalid-feedback\">{errors.identifier}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    value={this.state.description}\n                    onChange={this.onChange}\n                  ></textarea>\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"startDate\"\n                    value={this.state.startDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"endDate\"\n                    value={this.state.endDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { createProject })(AddProject);\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload\n      };\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload\n      };\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          project => project.identifier !== action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"../actions/types\";\n\nconst initialState = {\n  project_tasks: [],\n  project_task: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        project_tasks: action.payload\n      };\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        project_task: action.payload\n      };\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        project_tasks: state.project_tasks.filter(\n          project_task => project_task.projectSequence !== action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  user: {},\n  validToken: false\n};\n\nconst isActionPayload = payload => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: isActionPayload(action.payload),\n        user: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  security: securityReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware)),\n    ReactReduxDevTools\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      name: \"\",\n      identifier: \"\",\n      description: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      name,\n      identifier,\n      description,\n      startDate,\n      endDate\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      name,\n      identifier,\n      description,\n      startDate,\n      endDate\n    });\n  }\n\n  componentDidMount() {\n    const { identifier } = this.props.match.params;\n    this.props.getProject(identifier, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const updatedProject = {\n      id: this.state.id,\n      name: this.state.name,\n      identifier: this.state.identifier,\n      description: this.state.description,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate\n    };\n\n    this.props.createProject(updatedProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.name\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"name\"\n                    value={this.state.name}\n                    onChange={this.onChange}\n                  />\n                  {errors.name && (\n                    <div className=\"invalid-feedback\">{errors.name}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.identifier\n                    })}\n                    placeholder=\"Unique Project ID\"\n                    name=\"identifier\"\n                    value={this.state.identifier}\n                    disabled\n                  />\n                  {errors.identifier && (\n                    <div className=\"invalid-feedback\">{errors.identifier}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    value={this.state.description}\n                    onChange={this.onChange}\n                  ></textarea>\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"startDate\"\n                    value={this.state.startDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"endDate\"\n                    value={this.state.endDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project.project,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { getProject, createProject })(\n  UpdateProject\n);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass ProjectTask extends Component {\n  onDeleteClick(backlog_id, projectSequence) {\n    this.props.deleteProjectTask(backlog_id, projectSequence);\n  }\n  render() {\n    const { project_task } = this.props;\n    let priorityString;\n    let priorityClass;\n\n    if (project_task.priority === 1) {\n      priorityClass = \"bg-danger text-light\";\n      priorityString = \"HIGH\";\n    }\n    if (project_task.priority === 2) {\n      priorityClass = \"bg-warning text-light\";\n      priorityString = \"MEDIUM\";\n    }\n    if (project_task.priority === 3) {\n      priorityClass = \"bg-info text-light\";\n      priorityString = \"LOW\";\n    }\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{project_task.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {project_task.acceptanceCriteria}\n          </p>\n          <Link\n            to={`updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\n            className=\"btn btn-primary\"\n          >\n            View / Update\n          </Link>\n\n          <button\n            className=\"btn btn-danger ml-4\"\n            onClick={this.onDeleteClick.bind(\n              this,\n              project_task.projectIdentifier,\n              project_task.projectSequence\n            )}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired\n};\n\nexport default connect(null, { deleteProjectTask })(ProjectTask);\n","import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"./types\";\n\nexport const addProjectTask = (\n  backlog_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const updateProjectTask = (\n  backlog_id,\n  projectSequence,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.put(\n      `/api/backlog/${backlog_id}/${projectSequence}`,\n      project_task\n    );\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const getBacklog = backlog_id => async dispatch => {\n  try {\n    const response = await axios.get(`/api/backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const getProjectTask = (\n  backlog_id,\n  projectSequence,\n  history\n) => async dispatch => {\n  try {\n    const response = await axios.get(\n      `/api/backlog/${backlog_id}/${projectSequence}`\n    );\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: response.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteProjectTask = (\n  backlog_id,\n  projectSequence,\n  history\n) => async dispatch => {\n  if (\n    window.confirm(\n      `You are deleting project task ${projectSequence}, this action cannot be undone`\n    )\n  ) {\n    await axios.delete(`/api/backlog/${backlog_id}/${projectSequence}`);\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: projectSequence\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\n\nclass Backlog extends Component {\n  render() {\n    const { project_tasks_prop } = this.props;\n    const tasks = project_tasks_prop.map(project_task => (\n      <ProjectTask key={project_task.id} project_task={project_task} />\n    ));\n\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.project_task.status === \"TODO\") {\n        todoItems.push(tasks[i]);\n      }\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n        inProgressItems.push(tasks[i]);\n      }\n      if (tasks[i].props.project_task.status === \"DONE\") {\n        doneItems.push(tasks[i]);\n      }\n    }\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>TO DO</h3>\n              </div>\n            </div>\n            {todoItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>In Progress</h3>\n              </div>\n            </div>\n\n            {inProgressItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Done</h3>\n              </div>\n            </div>\n            {doneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport { getBacklog } from \"../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass ProjectBoard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      errors: {}\n    };\n  }\n  componentDidMount() {\n    const { identifier } = this.props.match.params;\n    this.props.getBacklog(identifier);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  render() {\n    const { identifier } = this.props.match.params;\n    const { project_tasks } = this.props.backlog;\n    const { errors } = this.state;\n\n    let BoardContent;\n\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-info text-center\" role=\"alert\">\n              No project tasks on this board\n            </div>\n          );\n        }\n      } else {\n        return <Backlog project_tasks_prop={project_tasks} />;\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, project_tasks);\n    return (\n      <div className=\"container\">\n        <Link\n          to={`/addProjectTask/${identifier}`}\n          className=\"btn btn-primary mb-3\"\n        >\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n        </Link>\n        <br />\n        <hr />\n        {BoardContent}\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  getBacklog: PropTypes.func.isRequired,\n  backlog: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  backlog: state.backlog,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n\n    const { identifier } = this.props.match.params;\n\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: identifier,\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate\n    };\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { identifier } = this.props.match.params;\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/projectBoard/${identifier}`}\n                className=\"btn btn-light\"\n              >\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\n              <p className=\"lead text-center\">Project Name + Project Code</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.acceptanceCriteria\n                    })}\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  ></textarea>\n                  {errors.acceptanceCriteria && (\n                    <div className=\"invalid-feedback\">\n                      {errors.acceptanceCriteria}\n                    </div>\n                  )}\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.dueDate\n                    })}\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                  {errors.onChange && (\n                    <div className=\"invalid-feedback\">{errors.onChange}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TODO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport {\n  getProjectTask,\n  updateProjectTask\n} from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      projectIdentifier: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier\n    } = nextProps.project_task;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier\n    });\n  }\n\n  componentDidMount() {\n    const { backlog_id, project_sequence } = this.props.match.params;\n    this.props.getProjectTask(backlog_id, project_sequence, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const updatedTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier\n    };\n\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      updatedTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/projectBoard/${this.state.projectIdentifier}`}\n                className=\"btn btn-light\"\n              >\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\n              <p className=\"lead text-center\">\n                Project Name: {this.state.projectIdentifier} + Project Code:{\" \"}\n                {this.state.projectSequence}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.acceptanceCriteria\n                    })}\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  ></textarea>\n                  {errors.acceptanceCriteria && (\n                    <div className=\"invalid-feedback\">\n                      {errors.acceptanceCriteria}\n                    </div>\n                  )}\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.dueDate\n                    })}\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                  {errors.onChange && (\n                    <div className=\"invalid-feedback\">{errors.onChange}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TODO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\n  UpdateProjectTask\n);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">Task managment</h1>\n                <p className=\"lead\">\n                  Create your account to join active projects or start you own\n                </p>\n                <hr />\n                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\n                  Sign Up\n                </Link>\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.protoTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword\n    };\n\n    this.props.createNewUser(newUser, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your Account</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.fullName\n                    })}\n                    placeholder=\"Full name\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                  />\n                  {errors.fullName && (\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.confirmPassword\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { createNewUser })(Register);\n","import React, { Component } from \"react\";\nimport { login } from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const loginRequest = {\n      username: this.state.username,\n      password: this.state.password\n    };\n\n    this.props.login(loginRequest);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecureRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={props =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nSecureRoute.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(SecureRoute);\n","import React from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagment/Register\";\nimport Login from \"./components/UserManagment/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJwtToken from \"./securityUtils/setJwtToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecureRoute from \"./securityUtils/SecureRoute\";\n\nfunction App() {\n  const jwtToken = localStorage.jwtToken;\n  if (jwtToken) {\n    setJwtToken(jwtToken);\n    const decodedToken = jwt_decode(jwtToken);\n    store.dispatch({\n      type: SET_CURRENT_USER,\n      payload: decodedToken\n    });\n\n    const currentTime = Date.now() / 1000;\n    if (decodedToken.exp < currentTime) {\n      store.dispatch(logout());\n      window.location.href = \"/\";\n    }\n  }\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header />\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n\n          <Switch>\n            <SecureRoute exact path=\"/dashboard\" component={Dashboard} />\n            <SecureRoute exact path=\"/addProject\" component={AddProject} />\n            <SecureRoute\n              exact\n              path=\"/updateProject/:identifier\"\n              component={UpdateProject}\n            />\n            <SecureRoute\n              exact\n              path=\"/projectBoard/:identifier\"\n              component={ProjectBoard}\n            />\n            <SecureRoute\n              exact\n              path=\"/addProjectTask/:identifier\"\n              component={AddProjectTask}\n            />\n            <SecureRoute\n              exact\n              path=\"/projectBoard/updateProjectTask/:backlog_id/:project_sequence\"\n              component={UpdateProjectTask}\n            />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}